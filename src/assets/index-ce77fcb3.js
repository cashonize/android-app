(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))y(a);new MutationObserver(a=>{for(const h of a)if(h.type==="childList")for(const v of h.addedNodes)v.tagName==="LINK"&&v.rel==="modulepreload"&&y(v)}).observe(document,{childList:!0,subtree:!0});function d(a){const h={};return a.integrity&&(h.integrity=a.integrity),a.referrerPolicy&&(h.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?h.credentials="include":a.crossOrigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function y(a){if(a.ep)return;a.ep=!0;const h=d(a);fetch(a.href,h)}})();const oe="https://demo.chaingraph.cash/v1/graphql";async function D(r){return await(await fetch(oe,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify({operationName:null,variables:{},query:r})})).json()}async function ce(r){const e=`query {
        transaction(
          where: {
            block_inclusions: {
              block: { accepted_by: { node: { name: { _eq: "bchn-chipnet" } } } }
            }
            inputs: {
              outpoint_transaction_hash: { _eq: "\\\\x${r}" }
              outpoint_index: { _eq: 0 }
            }
          }
        ) {
          outputs(where: { token_category: { _eq: "\\\\x${r}" } }) {
            fungible_token_amount
          }
        }
      }`;return await D(e)}async function se(r){const e=`query {
        output(
          where: {
            token_category: { _eq: "\\\\x${r}" }
            _and: { nonfungible_token_capability: { _eq: "minting" } }
            _not: { spent_by: {} }
          }
        ) {
          locking_bytecode
        }
      }`;return await D(e)}async function ie(r){const e=`query {
        output(
          where: {
            token_category: {
              _eq: "\\\\x${r}"
            }
            _and: [
              { nonfungible_token_capability: { _eq: "none" } }
            ]
          }
        ) {
          locking_bytecode
        }
    }`;return await D(e)}const I="https://chipnet.chaingraph.cash",N="mywallet",_=document.querySelector("#newWalletView"),F=document.getElementById("seedphrase");let C=!1;const W=localStorage.getItem("darkMode");W==="true"&&(document.querySelector("#darkmode").checked=!0,E());W==null&&matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches&&(document.querySelector("#darkmode").checked=!0,E());const re=document.querySelector("#darkmode");re.onchange=()=>E();function E(){C=!C,document.body.classList=C?"dark":"";const r=document.querySelectorAll(".icon");C?r.forEach(e=>e.classList.add("dark")):r.forEach(e=>e.classList.remove("dark")),localStorage.setItem("darkMode",`${C}`),document.querySelector("#darkmode").checked=C}const R=localStorage.getItem("unit");R&&(document.querySelector("#selectUnit").value=R);let g=R||"tBCH";document.addEventListener("DOMContentLoaded",async r=>{Object.assign(globalThis,await __mainnetPromise);var e=window.indexedDB.open("test");e.onerror=()=>{_.classList.remove("hide"),setTimeout(()=>alert("Can't create a persistent wallet because indexedDb is unavailable, might be because of private window."),100)},await TestNetWallet.namedExists(N)?U():_.classList.remove("hide")});window.createNewWallet=async function(){DefaultProvider.servers.testnet=["wss://chipnet.imaginary.cash:50004"],await TestNetWallet.named(N),U()};window.importWallet=async function(){DefaultProvider.servers.testnet=["wss://chipnet.imaginary.cash:50004"];const y=`seed:testnet:${document.querySelector("#enterSeedphrase").value}:m/44'/0'/0'/0/0`;await TestNetWallet.replaceNamed(N,y),U()};async function U(){changeView(0),document.querySelector(".nav").classList.remove("hide"),_.classList.add("hide"),DefaultProvider.servers.testnet=["wss://chipnet.imaginary.cash:50004"];const e=await TestNetWallet.named(N);F.textContent=e.mnemonic,document.querySelector("#walletDerivationPath").textContent=e.derivationPath,console.log(e),Config.EnforceCashTokenReceiptAddresses=!0;const d="https://raw.githubusercontent.com/mr-zwets/example_bcmr/main/example_bcmr.json";await BCMR.addMetadataRegistryFromUri(d);let y=await e.getBalance(),a=await e.getMaxAmountToSend();if(g=="tBCH"){const t=y.sat/1e8;document.querySelector("#balance").innerText=t,document.querySelector("#balanceUnit").innerText=" tBCH",document.querySelector("#sendUnit").innerText=" tBCH"}else g=="satoshis"&&(document.querySelector("#balance").innerText=y.sat,document.querySelector("#balanceUnit").innerText=" testnet satoshis",document.querySelector("#sendUnit").innerText=" sats");document.querySelector("#balanceUsd").innerText=`${y.usd} $`,e.watchBalance(async t=>{if(y=t,a=await e.getMaxAmountToSend(),g=="tBCH"){const i=y.sat/1e8;document.querySelector("#balance").innerText=i,document.querySelector("#balanceUnit").innerText=" tBCH"}else g=="satoshis"&&(document.querySelector("#balance").innerText=y.sat,document.querySelector("#balanceUnit").innerText=" testnet satoshis");document.querySelector("#balanceUsd").innerText=`${y.usd} $`});const h=await e.getDepositAddress(),v=await e.getTokenDepositAddress();document.querySelector("#depositAddr").innerText=h,document.querySelector("#depositTokenAddr").innerText=v,document.querySelector("#qr1").contents=h,document.querySelector("#qr2").contents=v,document.querySelector("#placeholderQr").classList.add("hide"),document.querySelector("#qr1").classList.remove("hide");let $=[],L=[];O();async function O(){$=[];const t=await e.getAllTokenBalances();L=Object.keys(t),document.querySelector("#tokenBalance").innerText=`${L.length} different tokentypes`;for(const o of L){if(t[o]){$.push({tokenId:o,amount:t[o]});continue}const n=await e.getTokenUtxos(o);for(const S of n){const s=S.token;$.push({tokenId:o,tokenData:s})}}const i=document.querySelector("#noTokensFound");document.querySelector("#loadingTokenData").classList.add("hide");const c=document.querySelector("#verifiedOnly");$.length?(i.classList.add("hide"),c.classList.remove("hide"),Q($),j($)):(i.classList.remove("hide"),c.classList.add("hide"))}e.watchAddressTokenTransactions(async t=>O()),window.maxBch=function(i){g=="tBCH"?i.currentTarget.parentElement.querySelector("#sendAmount").value=a.bch:g=="satoshis"&&(i.currentTarget.parentElement.querySelector("#sendAmount").value=a.sat)},document.querySelector("#send").addEventListener("click",async()=>{try{const t=document.querySelector("#sendAmount").value;if(!(Number.isInteger(+t)&&+t>0)&&g=="satoshis")throw"Amount satoshis to send must be a valid integer";if(t<546&&g=="satoshis")throw"Must send atleast 546 satoshis";const c=document.querySelector("#sendAddr").value,o=g=="tBCH"?"bch":"sat",{txId:n}=await e.send([{cashaddr:c,value:t,unit:o}]);alert(`Sent ${t} sats to ${c}`),console.log(`Sent ${t} sats to ${c} 
${I}/tx/${n}`),document.querySelector("#sendAmount").value="",document.querySelector("#sendAddr").value=""}catch(t){alert(t)}});async function j(t){t.forEach(async(i,c)=>{try{const o=await BCMR.buildAuthChain({transactionHash:i.tokenId,followToHead:!0,network:Network.TESTNET});if(o[0])try{const S=await(await fetch(o[0].uri)).json();await BCMR.addMetadataRegistryFromUri(o[0].uri),console.log("Importing an on-chain resolved BCMR!"),J(i,c)}catch(n){console.log(n)}}catch{}})}function J(t,i){const c=document.querySelectorAll(".item")[i],o=BCMR.getTokenInfo(t.tokenId);if(console.log("re-rendering token with new tokenInfo"),o){const n=o.token.symbol||"";if(c.querySelector("#tokenName").textContent=`Name: ${o.name}`,c.querySelector("#tokenBegin").textContent=`Creation date: ${o.time.begin}`,o.description&&(c.querySelector("#tokenDescription").textContent=`Token description: ${o.description}`),t.amount){c.querySelector("#sendUnit").textContent=n;const u=o.token.decimals||0,m=`${t.amount/10**u} ${n}`;c.querySelector("#tokenAmount").textContent=`Token amount: ${m}`,c.querySelector("#tokenDecimals").textContent=`Number of decimals: ${u}`}const l=BCMR.getRegistries()[0].identities[t.tokenId];if(c.querySelector("#verified").classList.remove("hide"),l||(c.querySelector(".verifiedIcon").classList="unverifiedIcon",c.querySelector(".tooltiptext").textContent="Unverified"),o.uris&&o.uris.icon){const u=document.createElement("img");u.src=o.uris.icon,u.style="width:48px; max-width: inherit;";const m=c.querySelector("#tokenIcon");m.removeChild(m.lastChild),m.appendChild(u)}if(t.tokenData){const u=o.token.nfts.parse.types[t.tokenData.commitment];if(u&&u.uris&&u.uris.icon){const m=document.createElement("img");m.src=u.uris.icon,m.style="width: 48px; max-width: inherit;";const q=c.querySelector("#tokenIcon");q.removeChild(q.lastChild),q.appendChild(m)}}}}function Q(t){const i=document.getElementById("Placeholder"),c=document.createElement("ul");c.setAttribute("id","Placeholder");const o=document.getElementById("token-template");t.forEach(async(n,S)=>{const s=document.importNode(o.content,!0),l=BCMR.getTokenInfo(n.tokenId);let u=0,m="";l&&(m=l.token.symbol,u=l.token.decimals);const q=`${n.tokenId.slice(0,20)}...${n.tokenId.slice(-10)}`;s.querySelector("#tokenID").textContent=q,s.querySelector("#tokenID").value=n.tokenId;const X=s.querySelectorAll(".icon");if(C&&X.forEach(p=>p.classList.add("dark")),l){s.querySelector("#tokenName").textContent=`Name: ${l.name}`,s.querySelector("#tokenBegin").textContent=`Creation date: ${l.time.begin}`,l.description&&(s.querySelector("#tokenDescription").textContent=`Token description: ${l.description}`),s.querySelector("#tokenDecimals").textContent=`Number of decimals: ${l.token.decimals}`,s.querySelector("#sendUnit").textContent=m;const f=BCMR.getRegistries()[0].identities[n.tokenId];s.querySelector("#verified").classList.remove("hide"),f||(s.querySelector(".verifiedIcon").classList="unverifiedIcon",s.querySelector(".tooltiptext").textContent="Unverified")}const Y=s.querySelector("#tokenInfoDisplay"),Z=s.querySelector("#infoButton"),A=s.querySelector("#onchainTokenInfo");Z.onclick=async()=>{Y.classList.toggle("hide");const p=A.textContent;if(n.amount&&!p){const f=(await ce(n.tokenId)).data.transaction[0].outputs.reduce((k,b)=>k+parseInt(b.fungible_token_amount),0);A.textContent=`Genesis supply: ${f} tokens`,console.log("Fetched genesis supply from chaingraph demo instance")}else if(!p){let f=(await se(n.tokenId)).data.output.length?"Has an active minting NFT":"Does not have an active minting NFT";const k=await ie(n.tokenId);f+=` \r
 Total supply: ${k.data.output.length} NFTs`,A.textContent=f,console.log("Fetched existance of active minting tokens from chaingraph demo instance")}};let B=createIcon({seed:n.tokenId,size:12,scale:4,spotcolor:"#000"});if(l&&l.uris&&l.uris.icon&&(B=document.createElement("img"),B.src=l.uris.icon,B.style="width:48px; max-width: inherit;"),s.querySelector("#tokenIcon").appendChild(B),n.amount){let k=function(b){let T=n.amount;l&&(T=n.amount/10**l.token.decimals),b.currentTarget.parentElement.querySelector("#sendTokenAmount").value=T};var ue=k;s.querySelector("#tokenType").textContent="Fungible Tokens";const p=`${n.amount/10**u} ${m}`;s.querySelector("#tokenAmount").textContent=`Token amount: ${p}`;const x=s.querySelector("#tokenSend");s.getElementById("sendButton").onclick=()=>x.classList.toggle("hide");const f=x.querySelector("#sendSomeButton");f.onclick=()=>{let b=Number(x.querySelector("#sendTokenAmount").value);const T=x.querySelector("#tokenAddress").value;z(T,b,n.tokenId,l)},s.getElementById("maxButton").onclick=b=>k(b)}else{const p=n.tokenData.capability,x={minting:"Minting NFT",mutable:"Mutable NFT",none:"Immutable NFT"};s.querySelector("#tokenType").textContent=x[p];const f=n.tokenData.commitment;if(f!=""){const w=`NFT commitment: ${f}`;s.querySelector("#tokenCommitment").textContent=w}const k=s.querySelector("#nftSend");s.getElementById("sendButton").onclick=()=>k.classList.toggle("hide");const b=k.querySelector("#sendNFT");b.onclick=()=>{const w=k.querySelector("#tokenAddress").value;G(w,n.tokenId,p)};const T=s.querySelector("#nftMint"),P=s.querySelector("#nftBurn");if(p=="minting"){const w=s.querySelector("#mintButton"),V=s.querySelector("#burnButton");w.classList.remove("hide"),w.onclick=()=>T.classList.toggle("hide"),V.classList.remove("hide"),V.onclick=()=>P.classList.toggle("hide")}const ee=T.querySelector("#mintNFT");ee.onclick=()=>{const w=T.querySelector("#commitmentInput").value;H(n.tokenId,w)};const te=P.querySelector("#burnNFT");te.onclick=()=>{K(n.tokenId,f)};const ne=T.querySelector("#mintNFTs");ne.onclick=()=>{const w=T.querySelector("#amountNFTs").value;H(n.tokenId,"",w)}}c.appendChild(s)}),i.replaceWith(c)}async function z(t,i,c,o){try{const n=o?o.token.decimals:0,S=n?i*10**n:i,s=Number.isInteger(S)&&S>0;if(!s&&!n)throw"Amount tokens to send must be a valid integer";if(!s&&n)throw`Amount tokens to send must only have ${n} decimal places`;const{txId:l}=await e.send([new TokenSendRequest({cashaddr:t,amount:S,tokenId:c})]),u=`${c.slice(0,20)}...${c.slice(-10)}`;let m=`Sent ${i} fungible tokens of category ${u} to ${t}`;o&&(m=`Sent ${i} ${o.token.symbol} to ${t}`),alert(m),console.log(`${m} 
${I}/tx/${l}`)}catch(n){alert(n)}}async function G(t,i,c){try{const{txId:o}=await e.send([new TokenSendRequest({cashaddr:t,tokenId:i,commitment:"",capability:c})]),n=`${i.slice(0,20)}...${i.slice(-10)}`;alert(`Sent NFT of category ${n} to ${t}`),console.log(`Sent NFT of category ${n} to ${t} 
${I}/tx/${o}`)}catch(o){alert(o)}}async function H(t,i,c=1){try{if(!((q=>/^[A-F0-9]+$/i.test(q))(i)||i==""))throw`tokenCommitment '${i}' must be a hexadecimal`;const S=new TokenMintRequest({cashaddr:v,commitment:i,capability:NFTCapability.none,value:1e3}),s=[];for(let q=0;q<c;q++)s.push(S);const{txId:l}=await e.tokenMint(t,s),u=`${t.slice(0,20)}...${t.slice(-10)}`,m=i?`with commitment ${i}`:"";c==1?(alert(`Minted immutable NFT of category ${u} ${m}`),console.log(`Minted immutable NFT of category ${u} ${m} 
${I}/tx/${l}`)):(alert(`Minted ${c} NFTs of category ${u}`),console.log(`Minted ${c} immutable NFT of category ${u} 
${I}/tx/${l}`))}catch(o){alert(o)}}async function K(t,i){try{const{txId:c}=await e.tokenBurn({tokenId:t,capability:NFTCapability.minting,commitment:i},"burn"),o=`${t.slice(0,20)}...${t.slice(-10)}`;alert(`Burned minting NFT of category ${o}`),console.log(`Burned minting NFT of category ${o} 
${I}/tx/${c}`)}catch(c){alert(c)}}}let M=!1;const ae=document.querySelector("#verifiedOnlySwitch");ae.onchange=()=>le();function le(){M=!M,document.querySelector("#noVerifiedTokens").classList.add("hide");const r=document.querySelectorAll(".wallet");if(M){for(const d of r)d.classList.add("hide"),d.querySelector(".verifiedIcon")&&!d.querySelector("#verified").classList.contains("hide")&&d.classList.remove("hide");document.querySelectorAll(".wallet:not(.hide)")[0]||document.querySelector("#noVerifiedTokens").classList.remove("hide")}else for(const e of r)e.classList.remove("hide")}window.copyTextContent=function(e){var d=document.getElementById(e);navigator.clipboard.writeText(d.textContent)};window.copyTokenID=function(e,d="tokenID"){navigator.clipboard.writeText(e.currentTarget.parentElement.querySelector(`#${d}`).value)};window.changeView=function(e){const d=["walletView","tokenView","settingsView"];d.forEach((y,a)=>{document.querySelector(`#${y}`).classList.add("hide"),document.querySelector(`#view${a}`).classList="view"}),document.querySelector(`#${d[e]}`).classList.remove("hide"),document.querySelector(`#view${e}`).classList="view active"};window.selectUnit=function(e){const d=g;if(d=="tBCH"){const a=document.querySelector("#balance").innerText*1e8;document.querySelector("#balance").innerText=a,document.querySelector("#balanceUnit").innerText=" testnet satoshis",document.querySelector("#sendUnit").innerText=" sats"}else if(d=="satoshis"){const a=document.querySelector("#balance").innerText/1e8;document.querySelector("#balance").innerText=a,document.querySelector("#balanceUnit").innerText=" tBCH",document.querySelector("#sendUnit").innerText=" tBCH"}localStorage.setItem("unit",`${e.target.value}`),g=e.target.value,document.querySelector("#sendAmount").value=""};window.toggleSeedphrase=r=>{F.classList.toggle("hide");const e=F.classList.contains("hide");r.srcElement.value=e?"Show seed phrase":"Hide seed phrase"};window.switchAddressType=()=>{const r=document.querySelector("qr-code:not(.hide)"),e=document.querySelector("qr-code.hide");r.classList.add("hide"),e.classList.remove("hide"),e.animateQRCode("MaterializeIn")};
